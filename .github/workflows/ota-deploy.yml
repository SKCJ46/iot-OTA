name: OTA Deploy

on:
  push:
    branches:
      - main        # รันอัตโนมัติเมื่อ push ไปที่ main
  pull_request:
    branches:
      - main        # รันอัตโนมัติเมื่อมี PR เข้า main
  workflow_dispatch:  # เผื่ออยากกด manual รันเองได้

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Arduino CLI
        uses: arduino/setup-arduino-cli@v1

      - name: Install Libraries
        run: |
          arduino-cli core update-index
          arduino-cli core install esp32:esp32
          # เพิ่ม library ที่ต้องใช้ได้ที่นี่ เช่น
          # arduino-cli lib install "ArduinoJson"

      - name: Extract firmware version
        run: |
          FILE="Sender/OTA_SENDER.ino"
          echo "Checking file: $FILE"
          VERSION=$(grep -oP '(?<=#define CURRENT_VERSION ")[^"]*' $FILE)
          echo "Detected version: $VERSION"
          echo "{\"version\":\"$VERSION\"}" > version.json

      - name: Compile firmware
        run: |
          arduino-cli compile --fqbn esp32:esp32:esp32 Sender/OTA_SENDER.ino

      - name: Prepare artifacts (firmware.bin & version.json)
        run: |
          mkdir output
          cp Sender/build/esp32.esp32.esp32/OTA_SENDER.ino.bin output/firmware.bin
          cp version.json output/version.json

      - name: Upload to VM via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          source: "output/*"
          target: "~/iot-ota/firmware"

